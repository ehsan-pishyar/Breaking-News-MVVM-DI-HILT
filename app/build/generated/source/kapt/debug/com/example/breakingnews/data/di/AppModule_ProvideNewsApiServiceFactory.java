// Generated by Dagger (https://dagger.dev).
package com.example.breakingnews.data.di;

import com.example.breakingnews.data.api.helper.NewsApiHelper;
import com.example.breakingnews.data.api.helper.NewsApiHelperImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideNewsApiServiceFactory implements Factory<NewsApiHelper> {
  private final Provider<NewsApiHelperImpl> newsImplProvider;

  public AppModule_ProvideNewsApiServiceFactory(Provider<NewsApiHelperImpl> newsImplProvider) {
    this.newsImplProvider = newsImplProvider;
  }

  @Override
  public NewsApiHelper get() {
    return provideNewsApiService(newsImplProvider.get());
  }

  public static AppModule_ProvideNewsApiServiceFactory create(
      Provider<NewsApiHelperImpl> newsImplProvider) {
    return new AppModule_ProvideNewsApiServiceFactory(newsImplProvider);
  }

  public static NewsApiHelper provideNewsApiService(NewsApiHelperImpl newsImpl) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideNewsApiService(newsImpl));
  }
}
